/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.sql.*;
import clases.Conexion;
import java.awt.Image;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.xml.bind.DatatypeConverter;

/**
 *
 * @author MI PC
 */
public class Facturar extends javax.swing.JFrame {

    String user;

    DefaultTableModel model = new DefaultTableModel();

    int item = 1;

    int idCliente;
    String numVenta;
    String fecha;
    int TotalPagar;

    /**
     * Creates new form Facturar
     */
    public Facturar() {
        initComponents();
        user = Login.user;

        setTitle("Facturación - Sesión de " + user);
        setSize(600, 620);
        setResizable(false);
        setLocationRelativeTo(null);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_Wallpaper.getWidth(),
                jLabel_Wallpaper.getHeight(), Image.SCALE_DEFAULT));
        jLabel_Wallpaper.setIcon(icono);
        this.repaint();

        String idv="";
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select max(ven_id) from ventas");
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                idv = rs.getString(1);
            }
        } catch (SQLException e) {
            System.err.println("No se pudo encontrar el id ventas" + e);
        }
        jLabel_nro_serie.setText(idv);
        numVenta = jLabel_nro_serie.getText();
        
        txt_codProducto.requestFocus();

        Calendar calendar = Calendar.getInstance();
        fecha = Integer.toString(calendar.get(Calendar.DATE)) + "/"
                + Integer.toString(calendar.get(Calendar.MONTH) + 1) + "/"
                + Integer.toString(calendar.get(Calendar.YEAR));
        txt_fecha.setText(fecha);
        txt_vendedor.setText(user);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_logo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_codCliente = new javax.swing.JTextField();
        txt_codProducto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_precio = new javax.swing.JTextField();
        btn_buscarCliente = new javax.swing.JButton();
        btn_buscarProducto = new javax.swing.JButton();
        btn_agregar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_cliente = new javax.swing.JTextField();
        txt_producto = new javax.swing.JTextField();
        txt_stock = new javax.swing.JTextField();
        txt_vendedor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_cantidad = new javax.swing.JSpinner();
        txt_fecha = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_detalleVenta = new javax.swing.JTable();
        txt_total = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btn_generarVenta = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel_nro_serie = new javax.swing.JLabel();
        jLabel_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jLabel_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 140, 130));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Punto de venta");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Venta de artículos de oficina y librería");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("RUC: 132465897-0");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, -1, 20));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("NRO. SERIE:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("RUC CLIENTE:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("COD. PRODUCTO:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        txt_codCliente.setBackground(new java.awt.Color(153, 153, 255));
        txt_codCliente.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        txt_codCliente.setForeground(new java.awt.Color(255, 255, 255));
        txt_codCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_codCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codClienteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codClienteKeyTyped(evt);
            }
        });
        getContentPane().add(txt_codCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 120, -1));

        txt_codProducto.setBackground(new java.awt.Color(153, 153, 255));
        txt_codProducto.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        txt_codProducto.setForeground(new java.awt.Color(255, 255, 255));
        txt_codProducto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_codProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codProductoActionPerformed(evt);
            }
        });
        txt_codProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codProductoKeyTyped(evt);
            }
        });
        getContentPane().add(txt_codProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 120, -1));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("PRECIO:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        txt_precio.setEditable(false);
        txt_precio.setBackground(new java.awt.Color(153, 153, 255));
        txt_precio.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        txt_precio.setForeground(new java.awt.Color(255, 255, 255));
        txt_precio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 120, -1));

        btn_buscarCliente.setBackground(new java.awt.Color(153, 153, 255));
        btn_buscarCliente.setForeground(new java.awt.Color(255, 255, 255));
        btn_buscarCliente.setText("BUSCAR");
        btn_buscarCliente.setBorder(null);
        btn_buscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarClienteActionPerformed(evt);
            }
        });
        getContentPane().add(btn_buscarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 80, 25));

        btn_buscarProducto.setBackground(new java.awt.Color(153, 153, 255));
        btn_buscarProducto.setForeground(new java.awt.Color(255, 255, 255));
        btn_buscarProducto.setText("BUSCAR");
        btn_buscarProducto.setBorder(null);
        btn_buscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarProductoActionPerformed(evt);
            }
        });
        getContentPane().add(btn_buscarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, 80, 25));

        btn_agregar.setBackground(new java.awt.Color(153, 153, 255));
        btn_agregar.setForeground(new java.awt.Color(255, 255, 255));
        btn_agregar.setText("AGREGAR");
        btn_agregar.setBorder(null);
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 220, 80, 25));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("CLIENTE:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, -1, -1));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("PRODUC:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, -1, -1));

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("STOCK:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, -1, -1));

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("VENDEDOR:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, -1, -1));

        txt_cliente.setEditable(false);
        txt_cliente.setBackground(new java.awt.Color(153, 153, 255));
        txt_cliente.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        txt_cliente.setForeground(new java.awt.Color(255, 255, 255));
        txt_cliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_clienteActionPerformed(evt);
            }
        });
        getContentPane().add(txt_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 160, 180, -1));

        txt_producto.setEditable(false);
        txt_producto.setBackground(new java.awt.Color(153, 153, 255));
        txt_producto.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        txt_producto.setForeground(new java.awt.Color(255, 255, 255));
        txt_producto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_producto, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, 180, -1));

        txt_stock.setEditable(false);
        txt_stock.setBackground(new java.awt.Color(153, 153, 255));
        txt_stock.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        txt_stock.setForeground(new java.awt.Color(255, 255, 255));
        txt_stock.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 220, 180, -1));

        txt_vendedor.setBackground(new java.awt.Color(153, 153, 255));
        txt_vendedor.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        txt_vendedor.setForeground(new java.awt.Color(255, 255, 255));
        txt_vendedor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_vendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_vendedorActionPerformed(evt);
            }
        });
        getContentPane().add(txt_vendedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 250, 165, -1));

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("CANTIDAD:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        txt_cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cantidadKeyTyped(evt);
            }
        });
        getContentPane().add(txt_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 120, -1));

        txt_fecha.setEditable(false);
        txt_fecha.setBackground(new java.awt.Color(153, 153, 255));
        txt_fecha.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        txt_fecha.setForeground(new java.awt.Color(255, 255, 255));
        txt_fecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_fecha.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fechaActionPerformed(evt);
            }
        });
        getContentPane().add(txt_fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 80, -1));

        jTable_detalleVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NRO", "COD", "PRODUCTO", "CANTIDAD", "PRE UNI", "TOTAL"
            }
        ));
        jTable_detalleVenta.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable_detalleVenta.getTableHeader().setResizingAllowed(false);
        jTable_detalleVenta.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable_detalleVenta);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 600, 250));

        txt_total.setEditable(false);
        txt_total.setBackground(new java.awt.Color(153, 153, 255));
        txt_total.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        txt_total.setForeground(new java.awt.Color(255, 255, 255));
        txt_total.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totalActionPerformed(evt);
            }
        });
        getContentPane().add(txt_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 550, 150, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("TOTAL A PAGAR:");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 550, -1, 25));

        btn_generarVenta.setBackground(new java.awt.Color(153, 153, 255));
        btn_generarVenta.setForeground(new java.awt.Color(255, 255, 255));
        btn_generarVenta.setText("GENERAR VENTA");
        btn_generarVenta.setBorder(null);
        btn_generarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generarVentaActionPerformed(evt);
            }
        });
        getContentPane().add(btn_generarVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 550, 110, 25));

        jLabel14.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Tel.: 8383-0393939");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, -1, 20));

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Gs.");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 550, -1, -1));

        jLabel_nro_serie.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel_nro_serie.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_nro_serie.setText("jLabel16");
        getContentPane().add(jLabel_nro_serie, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, -1, -1));
        getContentPane().add(jLabel_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_clienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_clienteActionPerformed

    private void txt_vendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_vendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_vendedorActionPerformed

    private void txt_fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fechaActionPerformed

    private void txt_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_totalActionPerformed

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed
        int cantidad, precio, total, id, stock;
        String producto_nombre = txt_producto.getText();
        ArrayList lista = new ArrayList();
        model = (DefaultTableModel) jTable_detalleVenta.getModel();

        id = Integer.parseInt(txt_codProducto.getText());
        cantidad = Integer.parseInt(txt_cantidad.getValue().toString());
        precio = Integer.parseInt(txt_precio.getText());
        total = precio * cantidad;
        stock = Integer.parseInt(txt_stock.getText());

        if (cantidad > 0) {
            if (stock >= cantidad) {
                lista.add(item);
                lista.add(id);
                lista.add(producto_nombre);
                lista.add(cantidad);
                lista.add(precio);
                lista.add(total);

                Object[] ob = new Object[6];
                ob[0] = lista.get(0);
                ob[1] = lista.get(1);
                ob[2] = lista.get(2);
                ob[3] = lista.get(3);
                ob[4] = lista.get(4);
                ob[5] = lista.get(5);
                model.addRow(ob);
                item++;
                CalcularTotal();
                Limpiar();
                txt_codProducto.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Stock insuficiente.");
                txt_cantidad.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe ingresar una cantidad mayor a 0.");
            txt_cantidad.requestFocus();
        }


    }//GEN-LAST:event_btn_agregarActionPerformed

    private void btn_buscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarClienteActionPerformed
        String ruc;

        ruc = txt_codCliente.getText();

        if (ruc.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un ruc.");
            txt_codCliente.requestFocus();
        } else {
            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "select cli_id, cli_nombre, cli_dv from clientes where cli_ruc = '" + ruc + "'");
                ResultSet rs = pst.executeQuery();

                if (rs.next()) {
                    idCliente = rs.getInt("cli_id");
                    txt_codCliente.setText(ruc + "-" + rs.getString("cli_dv"));
                    txt_cliente.setText(rs.getString("cli_nombre"));
                    txt_codProducto.requestFocus();
                } else {
                    int r = JOptionPane.showConfirmDialog(this, "Cliente no registrado, desea registrarlo?.");
                    if (r == 0) {
                        RegistrarClientes rc = new RegistrarClientes();
                        rc.setVisible(true);
                    }
                    txt_codCliente.requestFocus();
                }
                cn.close();
            } catch (SQLException e) {
                System.err.println("Error en buscar cliente." + e);
                JOptionPane.showMessageDialog(null, "Error en buscar cliente, contacte con el administrador.");
            }
        }

    }//GEN-LAST:event_btn_buscarClienteActionPerformed

    private void txt_codProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codProductoActionPerformed

    private void btn_buscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarProductoActionPerformed
        String producto;

        producto = txt_codProducto.getText();

        if (producto.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un codigo o un producto.");
            txt_codProducto.requestFocus();
        } else {
            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "select produ_nombre, produ_precio, produ_stock from productos "
                        + "where produ_id = '" + producto + "'");
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    txt_producto.setText(rs.getString("produ_nombre"));
                    txt_precio.setText(rs.getString("produ_precio"));
                    txt_stock.setText(rs.getString("produ_stock"));
                    txt_cantidad.setValue(1);
                    txt_cantidad.requestFocus();
                    cn.close();
                } else {
                    pst = cn.prepareStatement(
                            "select produ_id, produ_precio, produ_stock from productos where produ_nombre = '"
                            + producto + "'");
                    ResultSet rs2 = pst.executeQuery();
                    if (rs2.next()) {

                        txt_producto.setText(producto);
                        txt_codProducto.setText(Integer.toString(rs2.getInt("produ_id")));
                        txt_precio.setText(rs2.getString("produ_precio"));
                        txt_stock.setText(rs2.getString("produ_stock"));
                        txt_cantidad.setValue(1);
                        txt_cantidad.requestFocus();
                    } else {
                        JOptionPane.showMessageDialog(null, "Este producto no existe.");
                        txt_codProducto.requestFocus();
                    }
                    cn.close();
                }

            } catch (SQLException e) {
                System.err.println("El producto no se encontró." + e);
            }

        }
    }//GEN-LAST:event_btn_buscarProductoActionPerformed

    private void btn_generarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generarVentaActionPerformed
        TotalPagar = Integer.parseInt(txt_total.getText());
        String sql = "insert into ventas values (?,?,?,?,?,?)";
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(sql);

            pst.setInt(1, 0);
            pst.setInt(2, idCliente);
            pst.setString(3, user);
            pst.setString(4, numVenta);
            pst.setString(5, fecha);
            pst.setInt(6, TotalPagar);

            pst.executeUpdate();
            cn.close();

            guardarDetalle();
            actualizarStock();

            JOptionPane.showMessageDialog(null, "Venta exitosa.");

            txt_codCliente.setText("");
            txt_cliente.setText("");
            LimpiarTabla();
            txt_codProducto.requestFocus();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "No se ha podido realizar la venta.");
        }
    }//GEN-LAST:event_btn_generarVentaActionPerformed

    private void txt_codClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codClienteKeyPressed

    }//GEN-LAST:event_txt_codClienteKeyPressed

    private void txt_codClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codClienteKeyTyped
        if (evt.getKeyChar() == '\n') {
            btn_buscarCliente.doClick();
        }
    }//GEN-LAST:event_txt_codClienteKeyTyped

    private void txt_codProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codProductoKeyTyped
        if (evt.getKeyChar() == '\n') {
            btn_buscarProducto.doClick();
        }
    }//GEN-LAST:event_txt_codProductoKeyTyped

    private void txt_cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cantidadKeyTyped
        if (evt.getKeyChar() == '\n') {
            btn_agregar.doClick();
        }
    }//GEN-LAST:event_txt_cantidadKeyTyped

    void guardarDetalle() {

        for (int i = 0; i < model.getRowCount(); i++) {
            int idp = Integer.parseInt(jTable_detalleVenta.getValueAt(i, 1).toString());
            int cant = Integer.parseInt(jTable_detalleVenta.getValueAt(i, 3).toString());
            int pre = Integer.parseInt(jTable_detalleVenta.getValueAt(i, 5).toString());
            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("insert into detalle_venta values (?,?,?,?,?)");
                pst.setInt(1, 0);
                pst.setInt(2, Integer.parseInt(numVenta));
                pst.setInt(3, idp);
                pst.setInt(4, cant);
                pst.setInt(5, pre);

                pst.executeUpdate();
                cn.close();

            } catch (SQLException e) {
                System.err.println("Error en guardar detalles." + e);
            }
        }
    }

    void actualizarStock() {
        for (int i = 0; i < model.getRowCount(); i++) {
            int idp = Integer.parseInt(jTable_detalleVenta.getValueAt(i, 1).toString());
            int cant = Integer.parseInt(jTable_detalleVenta.getValueAt(i, 3).toString());

            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "select produ_stock from productos where produ_id = '" + idp + "'");
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {

                    String v = rs.getString("produ_stock");
                    int stock = Integer.parseInt(v);
                    stock = stock - cant;
                    cn.close();
                    try {
                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement(
                                "update productos set produ_stock=? where produ_id = '" + idp + "'");
                        pst2.setString(1, "" + stock);

                        pst2.executeUpdate();
                        cn2.close();
                    } catch (SQLException e) {
                        System.err.println("Error en actualizar stock." + e);
                    }
                }

            } catch (SQLException e) {
                System.err.println("Error en buscar stock de producto." + e);
            }

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Facturar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregar;
    private javax.swing.JButton btn_buscarCliente;
    private javax.swing.JButton btn_buscarProducto;
    private javax.swing.JButton btn_generarVenta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Wallpaper;
    private javax.swing.JLabel jLabel_logo;
    private javax.swing.JLabel jLabel_nro_serie;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_detalleVenta;
    private javax.swing.JSpinner txt_cantidad;
    private javax.swing.JTextField txt_cliente;
    private javax.swing.JTextField txt_codCliente;
    private javax.swing.JTextField txt_codProducto;
    private javax.swing.JTextField txt_fecha;
    private javax.swing.JTextField txt_precio;
    private javax.swing.JTextField txt_producto;
    private javax.swing.JTextField txt_stock;
    private javax.swing.JTextField txt_total;
    private javax.swing.JTextField txt_vendedor;
    // End of variables declaration//GEN-END:variables

    public void Limpiar() {
        txt_codProducto.setText("");
        txt_producto.setText("");
        txt_precio.setText("");
        txt_stock.setText("");
        txt_cantidad.setValue(0);
    }

    public void LimpiarTabla() {
        for (int i = 0; i < model.getRowCount(); i++) {
            model.removeRow(i);
            i--;
        }
    }

    public void CalcularTotal() {
        TotalPagar = 0;
        for (int i = 0; i < jTable_detalleVenta.getRowCount(); i++) {

            TotalPagar = TotalPagar + Integer.parseInt(jTable_detalleVenta.getValueAt(i, 5).toString());

        }
        txt_total.setText("" + TotalPagar);
    }
}
