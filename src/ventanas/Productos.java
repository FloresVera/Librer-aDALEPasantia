/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.sql.*;
import clases.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MI PC
 */
public class Productos extends javax.swing.JFrame {
    
    String user = "", producto_update = "";
    int ID;
    DefaultTableModel model = new DefaultTableModel();

    /**
     * Creates new form Productos
     */
    public Productos() {
        initComponents();
        user = Login.user;
        
        setTitle("Productos - Sesi√≥n de " + user);
        setSize(550, 500);
        setResizable(false);
        setLocationRelativeTo(null);
        
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_Wallpaper.getWidth(),
                jLabel_Wallpaper.getHeight(), Image.SCALE_DEFAULT));
        jLabel_Wallpaper.setIcon(icono);
        this.repaint();
        
        jButton_guardarNuevo.setVisible(true);
        jButton_actualizar.setVisible(false);
        jLabel_modificadoPor.setVisible(false);
        txt_ultima.setVisible(false);
        
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select produ_id, produ_nombre from productos");
            ResultSet rs = pst.executeQuery();
            
            jTable1 = new JTable(model);
            jScrollPane1.setViewportView(jTable1);
            
            model.addColumn(" ");
            model.addColumn("Nombre");
            
            while(rs.next()){
                Object[] fila = new Object[2];
                
                for (int i = 0; i < 2; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            cn.close();
        } catch (SQLException e) {
            System.err.println("Error al llenar la tabla de productos." + e);
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion, contacte al administrador.");
        }
        
        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e){
                int fila_point = jTable1.rowAtPoint(e.getPoint());
                int columna_point = 1;
                if (fila_point > -1) {
                    producto_update = (String)model.getValueAt(fila_point, columna_point);
                    jButton_guardarNuevo.setVisible(false);
                    jButton_actualizar.setVisible(true);
                    jLabel_modificadoPor.setVisible(true);
                    txt_ultima.setVisible(true);
                    
                    try {
                        
                        Connection cn = Conexion.conectar();
                        PreparedStatement pst = cn.prepareStatement(
                                "select * from productos where produ_nombre = '" + producto_update + "'");
                        ResultSet rs = pst.executeQuery();
                        
                        if (rs.next()) {
                            ID = rs.getInt("produ_id");
                            
                            txt_Nombre.setText(rs.getString("produ_nombre"));
                            txt_precio.setText(rs.getString("produ_precio"));
                            txt_stock.setText(rs.getString("produ_stock"));
                            txt_ultima.setText(rs.getString("produ_ultima"));
                        }
                        cn.close();
                    } catch (SQLException e2) {
                        System.err.println("Error en cargar producto." + e2);
                        JOptionPane.showMessageDialog(null, "Error al cargar, contacte al administrador");
                    }
                    
                }
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_Nombre = new javax.swing.JTextField();
        txt_precio = new javax.swing.JTextField();
        txt_stock = new javax.swing.JTextField();
        txt_ultima = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel_modificadoPor = new javax.swing.JLabel();
        jLabel_titulo = new javax.swing.JLabel();
        jButton_guardarNuevo = new javax.swing.JButton();
        jButton_actualizar = new javax.swing.JButton();
        jLabel_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 290, 420));

        txt_Nombre.setBackground(new java.awt.Color(153, 153, 255));
        txt_Nombre.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_Nombre.setForeground(new java.awt.Color(255, 255, 255));
        txt_Nombre.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 210, -1));

        txt_precio.setBackground(new java.awt.Color(153, 153, 255));
        txt_precio.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_precio.setForeground(new java.awt.Color(255, 255, 255));
        txt_precio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, 210, -1));

        txt_stock.setBackground(new java.awt.Color(153, 153, 255));
        txt_stock.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_stock.setForeground(new java.awt.Color(255, 255, 255));
        txt_stock.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 220, 210, -1));

        txt_ultima.setEditable(false);
        txt_ultima.setBackground(new java.awt.Color(153, 153, 255));
        txt_ultima.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_ultima.setForeground(new java.awt.Color(255, 255, 255));
        txt_ultima.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_ultima, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, 210, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nombre:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Precio:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Stock:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, -1, -1));

        jLabel_modificadoPor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_modificadoPor.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_modificadoPor.setText("Modificado por:");
        getContentPane().add(jLabel_modificadoPor, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, -1, -1));

        jLabel_titulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel_titulo.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_titulo.setText("Productos");
        getContentPane().add(jLabel_titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, -1));

        jButton_guardarNuevo.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jButton_guardarNuevo.setForeground(new java.awt.Color(255, 255, 255));
        jButton_guardarNuevo.setText("Guardar nuevo producto");
        jButton_guardarNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_guardarNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_guardarNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, 190, 35));

        jButton_actualizar.setBackground(new java.awt.Color(153, 153, 255));
        jButton_actualizar.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jButton_actualizar.setForeground(new java.awt.Color(255, 255, 255));
        jButton_actualizar.setText("Actualizar producto");
        jButton_actualizar.setBorder(null);
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, 190, 35));
        getContentPane().add(jLabel_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_guardarNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_guardarNuevoActionPerformed
        int validacion = 0;
        String nombre, precio, stock;

        nombre = txt_Nombre.getText().trim();
        precio = txt_precio.getText().trim();
        stock = txt_stock.getText().trim();


        if (nombre.equals("")) {
            txt_Nombre.setBackground(Color.red);
            validacion++;
        }
        if (precio.equals("")) {
            txt_precio.setBackground(Color.red);
            validacion++;
        }
        if (stock.equals("")) {
            txt_stock.setBackground(Color.red);
            validacion++;
        }

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                "select produ_nombre from productos where produ_nombre = '" + nombre + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txt_Nombre.setBackground(Color.red);
                JOptionPane.showMessageDialog(null, "Este producto ya existe.");
                cn.close();
            } else {
                cn.close();

                if (validacion == 0) {

                        try {
                            Connection cn2 = Conexion.conectar();
                            PreparedStatement pst2 = cn2.prepareStatement(
                                "insert into productos values (?,?,?,?,?)");

                            pst2.setInt(1, 0);
                            pst2.setString(2, nombre);
                            pst2.setString(3, precio);
                            pst2.setString(4, stock);
                            pst2.setString(5, user);

                            pst2.executeUpdate();
                            cn2.close();

                            Limpiar();

                            txt_Nombre.setBackground(Color.green);
                            txt_precio.setBackground(Color.green);
                            txt_stock.setBackground(Color.green);
                            txt_ultima.setBackground(Color.green);

                            JOptionPane.showMessageDialog(null, "Registro exitoso.");
                            this.dispose();

                        } catch (SQLException e) {
                            System.err.println("Error en cargar producto." + e);
                            JOptionPane.showMessageDialog(null, "Error en cargar, contacte al administrador.");
                        }

                } else {
                    JOptionPane.showMessageDialog(null, "Debe de llenar todos los campos.");
                }
            }
        } catch (SQLException e) {

            System.err.println("Error en comparar producto." + e);
            JOptionPane.showMessageDialog(null, "Error en comparar, contacte al administrador.");

        }

    }//GEN-LAST:event_jButton_guardarNuevoActionPerformed

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed
        int validacion = 0;
        String nombre, precio, stock;

        nombre = txt_Nombre.getText().trim();
        precio = txt_precio.getText().trim();
        stock = txt_stock.getText().trim();

        if (nombre.equals("")) {
            txt_Nombre.setBackground(Color.red);
            validacion ++;
        }
        if (precio.equals("")) {
            txt_precio.setBackground(Color.red);
            validacion ++;
        }
        if (stock.equals("")) {
            txt_stock.setBackground(Color.red);
            validacion ++;
        }

        if (validacion == 0) {

            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                    "select produ_nombre from productos where produ_nombre = '" + nombre + "' and not produ_id = '" + ID + "'");
                ResultSet rs = pst.executeQuery();

                if (rs.next()) {
                    txt_Nombre.setBackground(Color.red);
                    JOptionPane.showMessageDialog(null, "Este producto ya existe.");
                    cn.close();
                } else {
                    Connection cn2 = Conexion.conectar();
                    PreparedStatement pst2 = cn2.prepareStatement(
                        "update productos set produ_nombre=?, produ_precio=?, produ_stock=?, produ_ultima=?"
                        + "where produ_id = '" + ID + "'");

                    pst2.setString(1, nombre);
                    pst2.setString(2, precio);
                    pst2.setString(3, stock);
                    pst2.setString(4, user);

                    pst2.executeUpdate();
                    cn2.close();
                    
                    Limpiar();
                    
                    txt_Nombre.setBackground(Color.green);
                    txt_precio.setBackground(Color.green);
                    txt_stock.setBackground(Color.green);
                    txt_ultima.setBackground(Color.green);

                    JOptionPane.showMessageDialog(null, "Modificacion correcta.");
                }
            } catch (SQLException e) {
                System.err.println("Error al actualizar." + e);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debes de llenar todos los campos.");
        }
    }//GEN-LAST:event_jButton_actualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Productos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_guardarNuevo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Wallpaper;
    private javax.swing.JLabel jLabel_modificadoPor;
    private javax.swing.JLabel jLabel_titulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_Nombre;
    private javax.swing.JTextField txt_precio;
    private javax.swing.JTextField txt_stock;
    private javax.swing.JTextField txt_ultima;
    // End of variables declaration//GEN-END:variables

    public void Limpiar(){
        txt_Nombre.setText("");
        txt_precio.setText("");
        txt_stock.setText("");
        txt_ultima.setText("");
        
    }
    
}
